<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat - Buyer</title>
    <link rel="stylesheet" href="/stylesheets/chat.css">
    <script defer src="http://localhost:5000/socket.io/socket.io.js"></script>
   
    <script defer>
        document.addEventListener("DOMContentLoaded", () => {
        const socket = io('http://localhost:5000'); // Adjust if using a different port
        const roomId = '<%= ownerid %>';  
        const userId = '<%= userid %>';
        const userType = 'Buyer';

        const form = document.getElementById('send-container');
        const messageInp = document.getElementById('messageInp');
        const messageContainer = document.querySelector('.container');

        const append = (message, position) => {
            const messageElement = document.createElement('div');
            messageElement.innerText = message; // Correcting typo from innetText to innerText
            messageElement.classList.add('message');
            messageElement.classList.add(position); // 'right' or 'left'
            messageContainer.append(messageElement);
        }

        // Join the room
        socket.emit('join-room', { roomId, userId, userType });

        // Handle form submission
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const message = messageInp.value;
            append(`You: ${message}`, 'right');
            socket.emit('sendMessage', { roomId, userId, message, userType });
            messageInp.value = ''; // Clear input after sending
        });

        // Listen for new chat requests
       

        // Listen for incoming messages
        socket.on('receiveMessage', ({ userId, message, userType }) => {
            append(`${userType}: ${message}`, 'left');
        });

        // Listen for user joined
        socket.on('user-joined', userType => {
            append(`${userType} has joined the room`, 'left');
        });

        // Listen for user left
        socket.on('left', userType => {
            append(`${userType} has left`, 'left');
        });
    });
    </script>
</head>
<body>
    <nav>
        <h1 style="color: black;">Chat<b style="color: blue;">Connect</b></h1>
        <h1>Join us today to connect with sellers from all over and unlock endless possibilities!</h1>
       
    </nav>
    <div class="container">
        <!-- Messages will be appended here -->
    </div>
    <div class="send">
        <form  id="send-container">
            <input type="text" name="messageInp" id="messageInp" placeholder="Type your message here..." required>
            <button class="btn" type="submit">Send</button>
        </form>
    </div>
</body>
</html>